syntax = "proto3";

package todo;

option go_package = "github.com/greatliontech/protoc-gen-rtk-query/example/service/gen;todopb";

import "rtkquery/rtkquery.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

enum State {
  TODO = 0;
  DONE = 1;
}

message Todo {
  string id = 1;
  string title = 2;
  State state = 3;
  optional string description = 4;
}

message TodoId  {
  string id = 1;
}

message Todos {
  repeated Todo items = 1;
}

message UpdateTodoRequest {
  Todo todo = 1;
  google.protobuf.FieldMask update_mask = 2;
}

service TodoService {

  rpc ListTodos(google.protobuf.Empty) returns (Todos){
    option (rtkquery.query) = {
      endpoint_type: QUERY;
    };
  };

  rpc GetTodo(TodoId) returns (Todo){
    option (rtkquery.query) = {
      endpoint_type: QUERY;
    };
  };

  rpc CreateTodo(Todo) returns (Todo){
    option (rtkquery.query) = {
      endpoint_type: MUTATION;
    };
  };

  rpc UpdateTodo(UpdateTodoRequest) returns (Todo){
    option (rtkquery.query) = {
      endpoint_type: MUTATION;
    };
  };

  rpc DeleteTodo(TodoId) returns (TodoId){
    option (rtkquery.query) = {
      endpoint_type: MUTATION;
    };
  };

}
